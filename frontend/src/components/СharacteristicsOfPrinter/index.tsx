import React from "react";
import "./index.css";
import { useParams } from "react-router-dom";
import { useFetch } from "../../Helpers";
import { Printer } from "../../types";

type SpecEntry = {
   key: keyof Printer; 
   label: string;
   icon: string; 
};
const SPEC_CONFIG: SpecEntry[] = [
   { key: "volume_construction", label: "–û–±—ä—ë–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è", icon: "üì¶" },
   { key: "dimensions", label: "–ì–∞–±–∞—Ä–∏—Ç—ã (–î√ó–®√ó–í)", icon: "üìè" },
   { key: "extruders_count", label: "–ö–æ–ª-–≤–æ —ç–∫—Å—Ç—Ä—É–¥–µ—Ä–æ–≤", icon: "üñ®Ô∏è" },
   { key: "bed_max_temp", label: "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–æ–ª–∞", icon: " üå°Ô∏è" },
   { key: "filament_diameter", label: "–î–∏–∞–º–µ—Ç—Ä —Å–æ–ø–µ–ª", icon: "üî©" },
   { key: "print_speed", label: "–°–∫–æ—Ä–æ—Å—Ç—å –ø–µ—á–∞—Ç–∏", icon: "üöÄ" },
   { key: "positioning_accuracy", label: "–¢–æ—á–Ω–æ—Å—Ç—å", icon: "üìê" },
   { key: "materials", label: "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã", icon: "üß™" },
   { key: "energy_consumption", label: "–≠–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ", icon: "‚ö°Ô∏è" },
   { key: "power_supply", label: "–ü–∏—Ç–∞–Ω–∏–µ", icon: "üîå" },
   { key: "surface_of_site", label: "–ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å —Å—Ç–æ–ª–∞", icon: "ü™ü" },
   { key: "control", label: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", icon: "üéõÔ∏è" },
   { key: "software", label: "–ü–û", icon: "üíª" },
   { key: "additionally", label: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ", icon: "‚ú®" },
   { key: "weight", label: "–ú–∞—Å—Å–∞", icon: "‚öñÔ∏è" },
   { key: "guarantee", label: "–ì–∞—Ä–∞–Ω—Ç–∏—è", icon: "üõ°Ô∏è" },
   { key: "purpose", label: "–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ", icon: "üéØ" },
   { key: "heating_type", label: "–ù–∞–≥—Ä–µ–≤ –∫–∞–º–µ—Ä—ã", icon: "üî•" },
   { key: "capacity_spools", label: "–í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∫–∞—Ç—É—à–µ–∫", icon: "üßµ" },
   { key: "power_consumption", label: "–ü–æ—Ç—Ä–µ–±–ª—è–µ–º–∞—è –º–æ—â–Ω–æ—Å—Ç—å", icon: "‚ö°Ô∏è" },
   {
      key: "humidity_and_temperature",
      label: "–í–ª–∞–∂–Ω–æ—Å—Ç—å –∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞",
      icon: "üíßüå°Ô∏è",
   },
   { key: "noise_level", label: "–£—Ä–æ–≤–µ–Ω—å —à—É–º–∞", icon: "üîá" },
   { key: "integration", label: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è", icon: "üîó" },
   {
      key: "compressed_air",
      label: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–∂–∞—Ç–æ–º—É –≤–æ–∑–¥—É—Ö—É",
      icon: "üå¨Ô∏è",
   },
   { key: "layer_thickness", label: "–¢–æ–ª—â–∏–Ω–∞ —Å–ª–æ—è", icon: " üß±" },
];
export const CharacteristicsOfPrinter = () => {
   const { id } = useParams();

   const { data, loading, error } = useFetch<Printer | null>(
      `http://localhost:8000/api/equipment/products/${id}`
   );
   if (loading) return <p>Loading‚Ä¶</p>;

   if (error) return <p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</p>;
   if (!data) return null;
   return (
      <section className="characters__section">
         <h2 className="characters__section-title">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–µ</h2>
         <h3 className="characters__section-subtitle">–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h3>
         <div className="spec-grid-wrapper">
            <div className="spec-grid">
               {SPEC_CONFIG.map(({ key, label, icon }) => {
                  const raw = data[key];
                  /* –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ/null */
                  if (
                     raw === "" ||
                     raw === null ||
                     raw === undefined ||
                     raw === 0
                  )
                     return null;

                  return (
                     <div className="spec-cell" key={key}>
                        <div className="spec-icon">{icon}</div>
                        <div className="spec-label">{label}</div>
                        <div className="spec-value">{String(raw)}</div>
                     </div>
                  );
               })}
            </div>
         </div>
      </section>
   );
};
